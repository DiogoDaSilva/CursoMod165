@model IEnumerable<CursoMod165.Models.Appointment>
@{
    bool dateExists = ViewBag.StartDate != null;
}

<h1>Next Week's Appointments  
        @if (dateExists)
        {
            <span>
                (@ViewBag.StartDate.ToShortDateString() - @ViewBag.EndDate.ToShortDateString())
            </span>
        }
</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<p>
    <a asp-action="TomorrowsAppointments" class="btn btn-primary">Check tomorrow's Appointments</a>
</p>

@(
Html
        .Grid(Model)
        .Build(columns =>
        {
            columns.Add(ap => ap.Number).Titled("Ap. Number");
            columns.Add(ap => ap.Date).Titled("Date").Formatted("{0:dd-MM-yyyy}")
                                                     .Filterable(GridFilterType.Double);
            columns.Add(ap => ap.Time).Titled("Time").Formatted("{0:t}");
            columns.Add(ap => ap.Customer.Name).Titled("Customer");
            columns.Add(ap => ap.Staff.Name).Titled("Staff")
                .RenderedAs(ap => $"{ap.Staff.Name}  [{ap.Staff.StaffRole.Name}]");
            columns.Add(ap => ap.Staff.StaffRole.Name).Titled("Staff Role");
            columns.Add(ap => ap.IsDone).Titled("Done?")
                .RenderedAs(ap => (ap.IsDone == true ? "Yes" : "No"))
                .UsingFilterOptions(new[]
                {
                    new SelectListItem{ Value = "true", Text = "Yes" },
                    new SelectListItem{ Value = "false", Text = "No" }
                });

            columns.Add(ap =>
                Html.ActionLink("Edit", "Edit", new { id = ap.ID }, new {@class="btn btn-primary"}));
            columns.Add(ap =>
                Html.ActionLink("Delete", "Delete", new { id = ap.ID }, new { @class = "btn btn-primary" }));
        })
        .Filterable()
        .Sortable()
        
)
